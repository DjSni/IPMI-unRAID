Menu="IPMI:1"
Title="Settings"
Icon="heartbeat"
Tag="cog"
---
<? require_once '/usr/local/emhttp/plugins/ipmi/include/ipmi_settings.php';?>

<link type="text/css" rel="stylesheet" href="<?=autov('/webGui/styles/jquery.switchbutton.css');?>">
<link type="text/css" rel="stylesheet" href="<?=autov('/plugins/ipmi/css/ipmi.css');?>">

<div id="title" style="margin-top: -22px;">
    <span class="left"><i class="icon fa fa-cog"></i> IPMI Settings</span>
    <span class="status" style="margin-top: 50px;margin-left: -200px;">
    <img id="board-img" src=""></span>
</div>

<form markdown="1" id="settings-ipmi" name="ipmi_settings" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="ipmi/ipmi.cfg" />

Enable Network Connection(s):
: <select id="NETWORK" class="ipmi-run" name="NETWORK" size="1"  title="Enable connection to network based ipmi, not necessary for local onboard ipmi">
  <?=mk_option($netsvc, 'disable', 'No');?>
  <?=mk_option($netsvc, 'enable', 'Yes');?>
  </select>

> Enable monitoring of IPMI sensors and events through the network.
> Notifications and Fan Control must be stopped to change settings

<label class="ipmi-lan">Enable Localhost Connection:</label>
: <select id="LOCAL" class="ipmi-run ipmi-lan" name="LOCAL" size="1" title="Enable localhost connection along with network connections">
  <?=mk_option($local, 'disable', 'No');?>
  <?=mk_option($local, 'enable', 'Yes');?>
  </select>

> Enable monitoring of localhost as well as network servers.
>
> Useful when monitoring local server as well as a backup server or two.

<label class="ipmi-lan">IP Address(es):</label>
: <input id="IPADDR" type="text" class="ipmi-run ipmi-lan ipmi-ipaddr" name="IPADDR" maxlength="66" value="<?=htmlspecialchars($ipaddr);?>" title="IPMI IP address" placeholder="" ><label class='ipmi-lan'><?=$conn;?></label>

> Add up to four different IPMI IP addresses to monitor sensors and events.

<label class="ipmi-lan">User Name:</label>
: <input id="USER" type="text" class="ipmi-run ipmi-lan ipmi-user" name="USER" maxlength="40" value="<?=htmlspecialchars($user);?>" title="username for network access IPMI" placeholder="username for network access" >

> Username for IPMI connections(s).

<label class="ipmi-lan">Password:</label>
: <input id="PASSWORD" type="password" class="ipmi-run ipmi-lan ipmi-password" name="PASSWORD" maxlength="40" value="<?=htmlspecialchars($password);?>" title="password for network access IPMI" placeholder="password for network access" >

> Password for IPMI connection(s).

Enable Virtual Machine Override:
: <select id="OVERRIDE" class="ipmi-run ipmi-lan" name="OVERRIDE" size="1"  title="Enable motherboard override for virtual machines">
  <?=mk_option($override, 'disable', 'No');?>
  <?=mk_option($override, 'enable', 'Yes');?>
  </select>

> Enable motherboard override for virtual machines
> Selecting an incorrect model or motherboard will not work.
> Settings and commands are specific to each manufacture and model

<label class="ipmi-override">Motherboard:</label>
: <select id="OBOARD" class="ipmi-run ipmi-lan ipmi-override" name="OBOARD" size="1"  title="Select motherboard">
  <?=mk_option($oboard, 'ASRock', 'ASRock');?>
  <?=mk_option($oboard, 'Supermicro', 'Supermicro');?>
  </select>

> Select either ASRock or Supermicro
> Selecting an incorrect motherboard will not work.
> Settings and commands are specific to each manufacture

<label class="ipmi-override ipmi-count">Motherboard CPU sockets:</label>
: <select id="OCOUNT" class="ipmi-run ipmi-lan ipmi-override ipmi-count" name="OCOUNT" size="1"  title="Select number of ASRock physical CPU sockets">
  <?=mk_option($ocount, '0', 'Single');?>
  <?=mk_option($ocount, '1', 'Multiple');?>
  </select>

> Select the acutal number of physical CPU sockets your ASRock board has.
> This is not the same as the virtual cores for your virtual machine.

<label class="ipmi-override ipmi-model">Motherboard Model:</label>
: <select id="OMODEL" class="ipmi-run ipmi-lan ipmi-override ipmi-model" name="OMODEL" size="1"  title="Select Supermicro Model">
  <?=mk_option($omodel, '9', 'X9');?>
  <?=mk_option($omodel, '10', 'X10');?>
  <?=mk_option($omodel, '11', 'X11');?>
  <?=mk_option($omodel, '12', 'X12');?>
  </select>

> Select Supermicro model series
> Selecting an incorrect model will not work.
> Settings and commands are specific to each model

<input class="ipmi-run" type="button" id="ipmi-default" value="Default"><input type="button" value="Reset BMC" id="bmc-reset" title="do a cold reset of the BMC">
: <input id="btnApply" type="submit" value="Apply"><input type="button" value="Done" onClick="done()">

</form>

<div id="title" >
    <span class="left"><i class="icon fa fa-comment"></i> Event Notification</span>
    <span class="status" id="notify-status">Event Notification: <?=$seld_status;?> </span>
</div>

<form markdown="1" id="settings-seld" name="seld_settings" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="ipmi/ipmi.cfg" />
<input type="hidden" id="COMMAND" name="#command" value="" />

Enable Event Notifications:
: <select id="IPMISELD" name="IPMISELD" size="1" title="Enable event notifications and local system logging for ipmi events">
  <?=mk_option($seld, "disable", "No");?>
  <?=mk_option($seld, "enable", "Yes");?>
  </select>&nbsp;<input id="btnTest" type="button" value="Test" title="send a random sample event to your ipmi hardware">

> Enable IPMI event notifications. IPMI events will be logged in the system log.
>
> System log is monitored and notification event sent based on severity.

Event Polling Time:
: <select id="IPMIPOLL" class="seld-run" name="IPMIPOLL" size="1" title="Amount of time between ipmi event log checks">
  <?=mk_option($seldpoll, '15', '15 sec');?>
  <?=mk_option($seldpoll, '30', '30 sec');?>
  <?=mk_option($seldpoll, '60', '1 min');?>
  <?=mk_option($seldpoll, '180', '3 min');?>
  <?=mk_option($seldpoll, '300', '5 min');?>
  <?=mk_option($seldpoll, '1800', '30 min');?>
  </select>

> Specify how long between checking IPMI event log and adding events to system log.

&nbsp;

<input class="seld-run" type="button" id="seld-default" value="Default">
: <input class="seld-run" id="btnSELD" type="submit" value="Apply"><input type="button" value="Done" onClick="done()">
</form>

> Default button resets form.
>
> Reset BMC button performs a cold reset of the BMC

<div id="title"><span class="left"><i class="icon fa fa-desktop"></i> Display Settings</span></div>

<form markdown="1" id="settings-ignore" name="ignore_settings" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="ipmi/ipmi.cfg" />

Global Available Sensors:
: <select multiple id="select" title="choose sensors to show in all dropdown menus, readings page and footer.">
    <option value="">Select All</option>
    <?=ipmi_get_enabled($ignore);?>
  </select>

<input type="hidden" id="IGNORE" name="IGNORE" value="<?=htmlspecialchars($ignore);?>" />

<input type="hidden" id="select-svc" value="">

> Choose sensors to show in all dropdown menus, fan control, readings and footer.
>
> Unchecked sensors will not be displayed.

&nbsp;


Dashboard Sensors:
: <select multiple id="select-dash" title="choose IPMI sensors for the dashboard">
    <option value="">Select All</option>
    <?=ipmi_get_enabled($dignore);?>
  </select>

<input type="hidden" id="DIGNORE" name="DIGNORE" value="<?=htmlspecialchars($dignore);?>" />

<input type="hidden" id="select-dash-svc" name="DASH" value="<?=htmlspecialchars($dash);?>">

> Choose sensors to show in Dashboard display.
>
> Unchecked sensors will not be displayed.
> Unchecking all will disable the Dashboard display

&nbsp;

Available Hard Drives:
: <select multiple id="select-devs" title="choose hard drives to use with HDD Temperature">
    <option value="">Select All</option>
    <?=get_hdd_options($devignore);?>
  </select>

<input type="hidden" id="DEVIGNORE" name="DEVIGNORE" value="<?=htmlspecialchars($devignore);?>" />

<input type="hidden" id="select-devs-svc" name="DEVS" value="<?=htmlspecialchars($devs);?>">

> Choose hard drives to use for HDD Temperature.
>
> Unchecked hard drive temps will not be used.

&nbsp;

<input type="button" id="ignore-default" value="Default">
: <input type="submit" value="Apply"><input type="button" value="Done" onClick="done()">
</form>

<div id="title"><span class="left"><i class="icon fa fa-sticky-note"></i> Footer Settings</span></div>

<form markdown="1" id="settings-footer" name="footer_settings" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="ipmi/ipmi.cfg" />

> Display Settings can be applied at any time.

Sensor #1:
: <select id="DISP_SENSOR1" name="DISP_SENSOR1" class="display">
        <option value=''>None</option>
        <?=ipmi_get_options($disp_sensor1);?>
  </select>

> First sensor to monitor and display in footer of webGui.

Sensor #2:
: <select id="DISP_SENSOR2" name="DISP_SENSOR2" class="display">
        <option value=''>None</option>
        <?=ipmi_get_options($disp_sensor2);?>
    </select>

> Second sensor to monitor and display in footer of webGui.

Sensor #3:
: <select id="DISP_SENSOR3" name="DISP_SENSOR3" class="display">
        <option value=''>None</option>
        <?=ipmi_get_options($disp_sensor3);?>
    </select>

> Third sensor to monitor and display in footer of webGui.

Sensor #4:
: <select id="DISP_SENSOR4" name="DISP_SENSOR4" class="display">
        <option value=''>None</option>
        <?=ipmi_get_options($disp_sensor4);?>
    </select>

> Forth sensor to monitor and display in footer of webGui.

&nbsp;

<input type="button" id="footer-default" value="Default">
: <input type="submit" value="Apply"><input type="button" value="Done" onClick="done()">
</form>

<script src="<?=autov('/plugins/ipmi/js/jquery.mask.min.js');?>"></script>
<script src="<?=autov('/webGui/javascript/jquery.switchbutton.js');?>"></script>

<script>
$(function(){
    // append readings tab
    $('.tabs')
        .append('<div class="tab"><input type="radio" name="tabs2" id="tab5"><label for="tab5"><i class="icon fa fa-heartbeat"></i>Readings</label></div>');

    // dynamix plugin update api
    <?if (function_exists('plugin_update_available') && $version = plugin_update_available('ipmi')):?>
        showNotice('IPMI <?=htmlspecialchars($version);?> available. <a>Update</a>','ipmi');
        $('#user-notice a').on('click', function () {
            $('#user-notice').empty();
        });
    <?endif;?>

    initIgnoreDropdown(false);

    $('#tab1').click(function(){
        initIgnoreDropdown(true);
    });

    // if png is missing, replaced with unknown.png
    $('#board-img')
        .error(function() {
            $('#board-img').attr('src', '/plugins/ipmi/images/unknown.png');
        })
        .attr('src', "/plugins/ipmi/images/<?=$board;?>.png");

    $('#bmc-reset').click(resetBMC);

    $('#btnTest').click(EventTest);

    $('#tab5').click(function() {
        $.cookie('one', 'tab1', { expires:null, path: '/'});
        location = '/Settings/IPMITools';
    });

    $('#btnApply').click(verifyDATA);
    $('#ipmi-default').click(resetDATA);
    $('#seld-default').click(resetSeldDATA);
    $('#ignore-default').click(resetIgnoreDATA);
    $('#footer-default').click(resetFootDATA);

    $('#IPMISELD').change(checkSELD);
    checkSELD();

    $('#NETWORK').change(checkNETWORK);
    checkNETWORK();

    $('#OVERRIDE').change(checkOVERRIDE);
    $('#OBOARD').change(checkOVERRIDE);
    checkOVERRIDE();

    $('#LOCAL').change(checkLOCAL);
    checkLOCAL();

    decData();
});

function initIgnoreDropdown(remove) {
    if (remove) {
        $('#select').dropdownchecklist('destroy');
        $('#select-dash').dropdownchecklist('destroy');
        $('#select-devs').dropdownchecklist('destroy');
    }
    DDCheckList('#select','#IGNORE');
    DDCheckList('#select-dash','#DIGNORE');
    DDCheckList('#select-devs','#DEVIGNORE');
}

function DDCheckList(Select,Values) {
    $(Select).dropdownchecklist( {
        emptyText: 'Nothing Available',
        icon: {placement: 'right', toOpen: 'ui-icon-triangle-1-s', toClose: 'ui-icon-triangle-1-n'},
        width: 300,
        explicitClose: 'close',
        firstItemChecksAll: true,
        textFormatFunction: function(options) { return 'Select (unchecked will be ignored)'; },
        onComplete: function(selector){
            var values = '';
            var Unchecked = 1;
            var Size = selector.options.length;
            for( i=1; i < Size; i++ ) {
                if ((selector.options[i].selected == false) && (selector.options[i].value !== '')){
                    if (values != '')
                        values += ',';
                values += selector.options[i].value;
                Unchecked++;
            }
        }
        $(Values).val(values);

            if(Size == Unchecked)
                $(Select+'-svc').val('disable');
            else
                $(Select+'-svc').val('enable');
        }
    });
}

function resetDATA() {
    $('#NETWORK')[0].selectedIndex = 0;
    $('#LOCAL')[0].selectedIndex = 0;
    $('#IPADDR').val('');
    $('#USER').val('');
    $('#PASSWORD').val('');
    $('#settings-ipmi').submit();
}

function resetIgnoreDATA() {
    $('#IGNORE').val('');
    $('#DIGNORE').val('');
    $('#settings-ignore').submit();
}

function resetSeldDATA() {
    $('#IPMIPOLL')[0].selectedIndex = 2;
    $('#settings-seld').submit();
}

function resetFootDATA() {
    $('#DISP_SENSOR1')[0].selectedIndex = 0;
    $('#DISP_SENSOR2')[0].selectedIndex = 0;
    $('#DISP_SENSOR3')[0].selectedIndex = 0;
    $('#DISP_SENSOR4')[0].selectedIndex = 0;
    $('#settings-footer').submit();
}

function checkSELD() {
    if ($('#IPMISELD')[0].selectedIndex < 1 ){
        $('#COMMAND').val('/usr/local/emhttp/plugins/ipmi/scripts/seld_stop');
        $('#btnSELD').prop('disabled', false);
    }else {
        $('#COMMAND').val('/usr/local/emhttp/plugins/ipmi/scripts/seld_start');
    }

    if ("<?=$seld_run;?>" == true){
        $('.seld-run').prop('disabled', true);
        $('#btnTest').show();
    }else{
        $('.seld-run').prop('disabled', false);
        $('#btnTest').hide();
    }
}

function decData() {
    $('#PASSWORD').val(atob($('#PASSWORD').val()));
}

function checkNETWORK() {
    if ($('#NETWORK')[0].selectedIndex < 1 )
        $('.ipmi-lan').hide();
    else {
        $('.ipmi-lan').show();
        $('.ipmi-run').prop('disabled', ("<?=$seld_run || $fanctrl_run?>" == true));
    }
}

function checkOVERRIDE() {
    if ($('#OVERRIDE')[0].selectedIndex < 1 ){
        $('.ipmi-override').hide();
    }else {
        $('.ipmi-override').show();

        if ($('#OBOARD')[0].selectedIndex < 1 ){
            $('.ipmi-model').hide();
            $('.ipmi-count').show();
        }else{
            $('.ipmi-model').show();
            $('.ipmi-count').hide();
        }
    }
}

function checkLOCAL() {
    if ($('#LOCAL')[0].selectedIndex < 1 )
        $('.ipmi-ipaddr').mask('0ZZ.0ZZ.0ZZ.0ZZ,0ZZ.0ZZ.0ZZ.0ZZ,0ZZ.0ZZ.0ZZ.0ZZ,0ZZ.0ZZ.0ZZ.0ZZ', {translation:  {'Z': {pattern: /[0-9]/, optional: true}}});
    else
        $('.ipmi-ipaddr').mask('localhost,0ZZ.0ZZ.0ZZ.0ZZ,0ZZ.0ZZ.0ZZ.0ZZ,0ZZ.0ZZ.0ZZ.0ZZ', {translation:  {'Z': {pattern: /[0-9]/, optional: true}}});
}

function verifyDATA() {
    $('#PASSWORD').val(btoa( $('#PASSWORD').val()));
}

// send random test event
function EventTest() {
    $.getJSON('/plugins/ipmi/include/ipmi_event_test.php',
        function(Message) {
        swal({
            title: 'Sample Event Sent:',
            text: Message,
            type: 'success',
            showCancelButton: false,
            closeOnConfirm: true,
        }, function() {
        });
    });
}

// do a cold reset of the bmc
function resetBMC(){
    swal({
        title: 'Are you sure?',
        text: 'You want to do a cold reset of the BMC!?',
        type: 'warning',
        showCancelButton: true,
        closeOnConfirm: false
    }, function() {
        $.post('/plugins/ipmi/include/bmc_reset.php', {csrf_token:"<?=$var['csrf_token']?>"},function(data) {
            var Title = 'BMC Reset';

            if(data.success){
                swal({title:Title,text:'cold reset of BMC sucessful',type:'success',closeOnConfirm: true},function() {
                    location.reload(true);
                });
            }else{
                swal({title:Title,text:data.error,type:'error'});
            }

        }, 'json');
    });
};

</script>